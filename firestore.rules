rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Users can only read and write their own document.
    // - Onboarding status can be written only once.
    // - Deleting user documents from the client is disallowed.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId
                    && (!request.resource.data.hasCompletedOnboarding || resource.data.hasCompletedOnboarding == false);
      allow delete: if false;

      // Profile collection for long-term memory
      match /profile/{profileId} {
        allow read, write: if request.auth.uid == userId;
      }

      // Inbox: Users can create messages in their own inbox.
      // The backend will update the status, so client-side updates are denied.
      match /inbox/{messageId} {
        allow create: if request.auth != null && request.auth.uid == userId;
        allow read: if request.auth != null && request.auth.uid == userId;
        allow update, delete: if false;
      }

      // Outbox: Only readable by the user. The backend is the only writer.
      match /outbox/{messageId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create, update, delete: if false;
      }
    }
  }
} 